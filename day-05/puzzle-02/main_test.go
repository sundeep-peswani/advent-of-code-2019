package main

import (
	"bufio"
	"bytes"
	"strings"
	"testing"
)

func Test_Intcode(t *testing.T) {
	tests := []struct{
		program string
		expected []int
		input, output string
	}{
		{"1,9,10,3,2,3,11,0,99,30,40,50", []int{3500,9,10,70,2,3,11,0,99,30,40,50}, "", ""},
		{"1,0,0,0,99", []int{2,0,0,0,99}, "", ""},
		{"2,3,0,3,99", []int{2,3,0,6,99}, "", ""},
		{"2,4,4,5,99,0", []int{2,4,4,5,99,9801}, "", ""},
		{"1,1,1,4,99,5,6,0,99", []int{30,1,1,4,2,5,6,0,99}, "", ""},
		{"3,0,4,0,99", []int{50,0,4,0,99}, "50\n", "50\n"},
		{"1101,100,-1,4,0", []int{1101,100,-1,4,99}, "", ""},
		{"3,9,8,9,10,9,4,9,99,-1,8", []int{3,9,8,9,10,9,4,9,99,1,8}, "8\n", "1\n"},
		{"3,9,8,9,10,9,4,9,99,-1,8", []int{3,9,8,9,10,9,4,9,99,0,8}, "9\n", "0\n"},
		{"3,3,1108,-1,8,3,4,3,99", []int{3,3,1108,1,8,3,4,3,99}, "8\n", "1\n"},
		{"3,3,1108,-1,8,3,4,3,99", []int{3,3,1108,0,8,3,4,3,99}, "9\n", "0\n"},
		{"3,12,6,12,15,1,13,14,13,4,13,99,-1,0,1,9", []int{3,12,6,12,15,1,13,14,13,4,13,99,0,0,1,9}, "0\n", "0\n"},
		{"3,12,6,12,15,1,13,14,13,4,13,99,-1,0,1,9", []int{3,12,6,12,15,1,13,14,13,4,13,99,999,1,1,9}, "999\n", "1\n"},
		{"3,12,6,12,15,1,13,14,13,4,13,99,-1,0,1,9", []int{3,12,6,12,15,1,13,14,13,4,13,99,-3,1,1,9}, "-3\n", "1\n"},
		{"3,3,1105,-1,9,1101,0,0,12,4,12,99,1", []int{3,3,1105,0,9,1101,0,0,12,4,12,99,0}, "0\n", "0\n"},
		{"3,3,1105,-1,9,1101,0,0,12,4,12,99,1", []int{3,3,1105,999,9,1101,0,0,12,4,12,99,1}, "999\n", "1\n"},
		{"3,3,1105,-1,9,1101,0,0,12,4,12,99,1", []int{3,3,1105,-3,9,1101,0,0,12,4,12,99,1}, "-3\n", "1\n"},
		{"3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99", []int{3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,1106,0,36,98,0,7,1002,21,125,20,4,20,1105,1,46,104,999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99},"7\n","999\n"},
		{"3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99", []int{3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,1106,0,36,98,1000,8,1002,21,125,20,4,20,1105,1,46,104,999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99},"8\n","1000\n"},
		{"3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99", []int{3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,1106,0,36,98,1001,9,1002,21,125,20,4,20,1105,1,46,104,999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99},"9\n","1001\n"},
	}

	for i, test := range tests {
		var sut intcode
		var b bytes.Buffer

		sut.in = bufio.NewReader(strings.NewReader(test.input))
		sut.out = bufio.NewWriter(&b)

		sut.load(test.program)
		sut.run()

		if !equal(test.expected, sut.program) {
			t.Errorf("Test %d: expected\n%v, actual\n%v\n", i + 1, test.expected, sut.program)
		}

		if test.input != "" && b.String() != test.output {
			t.Errorf("Test %d: expected output of %s, actual %s\n", i + 1, test.output, b.String())
		}
	}
}

func equal(a, b []int) bool {
	if len(a) != len(b) {
		return false
	}

	for i, j := range a {
		if j != b[i] {
			return false
		}
	}

	return true
}
